<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1, width=device-width" />

    <link rel="stylesheet" href="./global.css" />
    <link rel="stylesheet" href="./catalogo.css" />
    <script src="/global.js" defer></script>

    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;600;700&display=swap"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,300;0,400;0,500;0,600&display=swap"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Literata:wght@400&display=swap"
    />

    
</head>
<body>
    <div class="canvas">

      <!-- Contenedor para la barra de navegación -->
      <div id="barra"></div>

      <!-- Contenedor para el catálogo -->
      <div class="catalog-container">
        
        <!-- Barra lateral de filtros -->
        <aside class="sidebar">
          <!-- Barra de búsqueda -->
          <div class="search-bar">
            <form action="/catalogo" method="GET">
              <input 
                type="text" 
                name="query" 
                placeholder="Buscar productos" 
                value="<%= typeof searchQuery !== 'undefined' ? searchQuery : '' %>" 
                class="search-input"
              />
              <!-- Mantener la categoría seleccionada cuando se realiza una búsqueda -->
              <input type="hidden" name="categoria" value="<%= typeof categoriaSeleccionada !== 'undefined' ? categoriaSeleccionada : '' %>">
              <button type="submit" class="search-button">Buscar</button>
            </form>
          </div>
          
          <h3>Categorías</h3>
          <ul>   
            <% categorias.forEach(function(categoria) { 
                
                const isOutlet = categoria.categoria.toLowerCase() === 'outlet';
            %>
              <li 
                class="<%= categoria.categoria === categoriaSeleccionada ? 'active' : '' %> 
                       <%= isOutlet ? 'outlet-category' : '' %>"
              >
                <a 
                  href="/catalogo?categoria=<%= categoria.categoria %>" 
                  class="<%= categoria.categoria === categoriaSeleccionada ? 'active' : '' %>"
                >
                  <%= categoria.categoria %> (<%= categoria.cantidad %>)
                </a>
              </li>
            <% }); %>
          </ul>
          
          <div class="custom-quote-section">
            <h2>¿Tienes algo en mente?</h2>
            <p>Cotiza tu diseño personalizado con nosotros. Haz clic aquí para comenzar.</p>
            <button class="quote-button" onclick="openCustomQuote()">Cotizar Ahora</button>
  
  
          </div>
          
        </aside>
        

     
        <section class="product-grid">
          <!-- Lista dinámica de productos -->
          <div class="product-list">
            <% productos.forEach(function(producto) { %>
              <!-- Comprobamos si el stock es 0 para usar no-stock en lugar de product-card -->
             
                <a href="/producto?id=<%= producto.producto_id %>" class="product-link">
                  <div class="product-card">
                    <img src="<%= producto.imagePath %>" alt="<%= producto.nombre %>" class="product-image">
                    <div class="product-details">
                      <h3 class="product-title"><%= producto.nombre %></h3>
                      <p class="product-sku">SKU <%= producto.codigo %></p>

                      <% function formatPrice(price) { 
                        return new Intl.NumberFormat("es-MX", { minimumFractionDigits: 2 }).format(price);
                      } %>
                      
                      <div class="product-price">
                        <p class="discounted-price">$<%= formatPrice(producto.precio) %></p>

                      </div>
                    </div>
                  </div>
                </a>
              
             
            <% }); %>
          </div>
          
          <!-- Paginación -->
         <!-- Paginación -->
        <div class="pagination">
          <% if (paginaActual > 1) { %>
            <a 
              href="/catalogo?page=<%= paginaActual - 1 %>&categoria=<%= categoriaSeleccionada %>&query=<%= searchQuery %>" 
              class="page-button"
            >
              Anterior
            </a>
          <% } %>

          <% for (let i = 1; i <= totalPaginas; i++) { %>
            <a 
              href="/catalogo?page=<%= i %>&categoria=<%= categoriaSeleccionada %>&query=<%= searchQuery %>" 
              class="page-button <%= i === paginaActual ? 'active' : '' %>"
            >
              <%= i %>
            </a>
          <% } %>

          <% if (paginaActual < totalPaginas) { %>
            <a 
              href="/catalogo?page=<%= paginaActual + 1 %>&categoria=<%= categoriaSeleccionada %>&query=<%= searchQuery %>" 
              class="page-button"
            >
              Siguiente
            </a>
          <% } %>
        </div>

        </section>
        
    
      </div>
     
    </div>
    
    <!-- Footer -->
    <div id="footer"></div>

    <script>
      
   
      window.onload = function () {
        let claseAResaltar = "catalogo";
      
        // Usar Promise.all para cargar barra y footer en paralelo
        Promise.all([
          fetch("/Templates/barra.html").then((response) => response.text()),
          fetch("/Templates/footer.html").then((response) => response.text()),
        ])
          .then(([barraHTML, footerHTML]) => {
            // Insertar el contenido de la barra y el footer
            document.getElementById("barra").innerHTML = barraHTML;
            document.getElementById("footer").innerHTML = footerHTML;
      
            // Aplicar estilo al elemento resaltado
            let elementoAResaltar = document.querySelector(`.${claseAResaltar}`);
            if (elementoAResaltar) {
              elementoAResaltar.style.fontWeight = "bold";
              elementoAResaltar.style.color = "var(--color-lightseagreen)";
            }
      
            // Inicializar funcionalidades de la barra
            inicializarBarra();
          })
          .catch((error) => console.error("Error al cargar los templates:", error));
      };
      
      function inicializarBarra() {
        const loginWrapper = document.querySelector("#login-wrapper3");
        const loginText = document.querySelector(".login5"); // El texto dentro del botón
        const cartContainer = document.getElementById("cart-container");
      
        // Configuración predeterminada del botón de login
        if (loginWrapper) {
          loginWrapper.onclick = function () {
            window.location.href = "/login";
          };
        }
      
        // Verificar sesión para personalizar la barra
        fetch("/api/session")
          .then((response) => response.json())
          .then((data) => {
            console.log("Sesión obtenida:", data);
      
            if (data.isAuthenticated) {
              // Cambiar el diseño y funcionalidad del login-wrapper para usuarios autenticados
              if (loginWrapper) {
                loginWrapper.style.backgroundColor = "#C19A6B";
                loginWrapper.style.top = "-10px"; // Ajustar posición si necesario
                loginText.textContent = "Mi Perfil";
                loginWrapper.onclick = function () {
                  window.location.href = "/perfil";
                };
              }
      
              // Mostrar el carrito para usuarios autenticados
              if (cartContainer) {
                cartContainer.style.display = "flex"; // Cambiar a 'block' si el diseño lo requiere
              } else {
                console.warn("cart-container no encontrado en el DOM");
              }
      
              console.log("Sesión iniciada. Usuario:", data.correo);
            } else {
              console.log("No hay sesión iniciada.");
      
              // Ocultar el carrito si no está autenticado
              if (cartContainer) {
                cartContainer.style.display = "none";
              }
            }
          })
          .catch((error) => console.error("Error al cargar la sesión:", error));
      }
      


      var logo = document.getElementById("logo");
      if (logo) {
        logo.addEventListener("click", function (e) {
          window.location.href = "/";
        });
      }

      function toggleMenu() {
        const menu = document.querySelector('.menu-container');
        menu.classList.toggle('active'); // Activa o desactiva el menú
      }
      function openCustomQuote() {
        const popupOverlay = document.createElement('div');
        popupOverlay.id = 'popup-overlay';
        popupOverlay.style.position = 'fixed';
        popupOverlay.style.top = '0';
        popupOverlay.style.left = '0';
        popupOverlay.style.width = '100%';
        popupOverlay.style.height = '100%';
        
        popupOverlay.style.display = 'flex';
        popupOverlay.style.justifyContent = 'center';
        popupOverlay.style.alignItems = 'center';
        popupOverlay.style.zIndex = '1000';
    
        const iframe = document.createElement('iframe');
        iframe.src = '/static/pedido_custom.html';
        iframe.style.width = '100%';
        iframe.style.height = '100%';
        iframe.style.border = 'none';
        
  
    
        // Botón de cierre
        const closeButton = document.createElement('button');
        closeButton.textContent = '✖';
        closeButton.style.position = 'absolute';
        closeButton.style.top = '10px';
        closeButton.style.right = '10px';
        closeButton.style.backgroundColor = '#FF4D4D'; // Color rojo llamativo
        closeButton.style.color = '#FFF'; // Texto blanco para contraste
        closeButton.style.border = 'none';
        closeButton.style.borderRadius = '50%'; // Hace el botón circular
        closeButton.style.padding = '10px';
        closeButton.style.width = '60px'; // Ajustar tamaño del botón
        closeButton.style.height = '60px';
        closeButton.style.display = 'flex';
        closeButton.style.justifyContent = 'center';
        closeButton.style.alignItems = 'center';
        closeButton.style.fontSize = '20px'; // Aumenta el tamaño del texto
        closeButton.style.cursor = 'pointer';
        closeButton.style.zIndex = '1001';

        closeButton.addEventListener('mouseover', () => {
            closeButton.style.backgroundColor = '#FF3333'; // Cambia a un rojo más oscuro al pasar el cursor
        });

        closeButton.addEventListener('mouseout', () => {
            closeButton.style.backgroundColor = '#FF4D4D'; // Vuelve al rojo original
        });
            
        closeButton.addEventListener('click', () => {
            popupOverlay.remove(); // Elimina el popup del DOM
        });
    
        popupOverlay.appendChild(closeButton);
        popupOverlay.appendChild(iframe);
    
        document.body.appendChild(popupOverlay);
    
        // Cierra el popup al hacer clic fuera del iframe
        popupOverlay.addEventListener('click', (event) => {
            if (event.target === popupOverlay) {
                popupOverlay.remove(); // Elimina el popup del DOM
            }
        });
    }
    
      
      
    </script>
</body>
</html>
