<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="initial-scale=1, width=device-width" />

  <link rel="stylesheet" href="./global.css" />
  <link rel="stylesheet" href="./carrito.css" />

  <link
    rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;600;700&display=swap"
  />
  <link
    rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,300;0,400;0,500;0,600&display=swap"
  />
  <link
    rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Literata:wght@400&display=swap"
  />

  <title>Carrito</title>

  
    <!-- Barra y Footer (van antes de tu propio JS) -->
    <link rel="stylesheet" href="/barra.css" />
    <link rel="stylesheet" href="/footer.css" />
    <script src="/barra.js" defer></script> <!-- toggleMenu, hideSidebar -->
    <script src="/global.js" defer></script>
</head>
<body>
  <div id="barra"></div>

  <div class = "container" >

    <!-- aqiu escribir el codigo nuevo -->
      <div class="profile-container">
        <h2>Tu Carrito</h2>
           <!-- üîπ Campo para ingresar referencia de compra -->
        <div class="reference-container">
          <label for="purchase-reference"><b>Referencia de Compra:</b></label>
          <input type="text" class="ref" id="purchase-reference" placeholder="Ingresa una referencia" required>
        </div>
        
        <!-- Lista de productos en el carrito -->
        <ul class="cart-items">
          <!-- Aqu√≠ se cargar√°n los productos din√°micamente desde carrito.js -->
        </ul>
      
        <!-- Resumen del carrito -->
        <div class="cart-summary">
          <p>Total de productos: <span class="total-items">0</span></p>
          <p>Subtotal: <span class="total-price">$0.00</span></p>
          <p id="shipping-cost-display">Costo de env√≠o: <span class="shipping-cost">$0.00</span></p>
         
          <p><strong>Total (con env√≠o):</strong> <span class="final-total">$0.00</span></p> <!-- üîπ Agregado -->
        </div>
        

        <!-- Selecci√≥n de direcci√≥n de env√≠o -->
        <div class="shipping-address">
          <h3>Direcci√≥n de Env√≠o</h3>
          <div id="selected-address">
            <p><b id="address-name"></b></p>
            <p id="address-details"></p>
            <button id="change-address">Cambiar</button>
          </div>
        </div>

        <!-- Modal para seleccionar direcci√≥n -->
        <div id="address-modal" class="modal" style="display: none;">
          <div class="modal-content">
            <span class="close" onclick="document.getElementById('address-modal').style.display='none'">&times;</span>
            <h2>Selecciona una Direcci√≥n</h2>
            <ul id="address-list"></ul>
          </div>
        </div>

              
        <!-- Botones de acci√≥n -->
        <div class="cart-actions">
          
        
          
          <button id="continue-shopping" class="continue-btn">Seguir Comprando</button>
          <script>
            // Seleccionamos el bot√≥n por su ID
            document.getElementById('continue-shopping').addEventListener('click', () => {
              // Redirige al usuario a la ruta /catalogo
              window.location.href = '/catalogo';
            });
          </script>


          <div id="wallet_container"></div>
          
        
         
          <script src="https://sdk.mercadopago.com/js/v3"></script>
          
      <script>
          (async () => {
            // 1) Detectar modo desde tu backend
            const { mode } = await fetch("/debug/env").then(r => r.json());

            // 2) Public keys: pon aqu√≠ TUS claves p√∫blicas (no las de access token)
            //    TEST -> la que empieza normalmente con "TEST-"
            //    PROD -> la que empieza normalmente con "APP_USR-"
            const PUBLIC_KEY_TEST = "MP_PUBLIC_KEY_TEST";
            const PUBLIC_KEY_PROD = "MP_PUBLIC_KEY";

            const publicKey = mode === "test" ? PUBLIC_KEY_TEST : PUBLIC_KEY_PROD;
            const createUrl = mode === "test" ? "/create_preference_test" : "/create_preference";

            // 3) Instanciar MP con la public key correcta
            const mp = new MercadoPago(publicKey, { locale: "es-MX" });

            // 4) Crear preferencia en tu backend
            const resp = await fetch(createUrl, {
              method: "POST",
              headers: { "Content-Type": "application/json" }
            });

            if (!resp.ok) {
              const txt = await resp.text();
              throw new Error(`No se pudo crear la preferencia: HTTP ${resp.status} ‚Äì ${txt}`);
            }

            const data = await resp.json();
            const preferenceId = data.preferenceId;
            if (!preferenceId) throw new Error("El backend no devolvi√≥ preferenceId");

            // 5) Renderizar el Brick Wallet
            await mp.bricks().create("wallet", "wallet_container", {
              initialization: { preferenceId },
              customization: {
                texts: { valueProp: "security_safety", action: "pay" },
                visual: { style: { theme: "dark" } }
              }
            });
          })().catch(err => {
            console.error("Error al cargar el bot√≥n de pago:", err);
            document.getElementById("wallet_container").innerHTML =
              "<p style='color:red'>No se pudo iniciar el pago. Revisa consola.</p>";
          });
        </script>


        </div>
        


      </div>
    
     

      </div>
    </div>
    <div id="footer" style="display: none;"></div>



  <script src="./carrito.js"></script>

  <script>
    // barra y footer
    window.onload = () => loadTemplates('carrito');
  </script>
</body>
</html>
