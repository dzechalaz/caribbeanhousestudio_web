<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="initial-scale=1, width=device-width" />

  <link rel="stylesheet" href="./global.css" />
  <link rel="stylesheet" href="./carrito.css" />

  <link
    rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;600;700&display=swap"
  />
  <link
    rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,300;0,400;0,500;0,600&display=swap"
  />
  <link
    rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Literata:wght@400&display=swap"
  />
  <script src="https://sdk.mercadopago.com/js/v2"></script>
  <title>Carrito</title>
</head>
<body>
  <div id="barra"></div>

  <div class = "container" >

    <!-- aqiu escribir el codigo nuevo -->
      <div class="profile-container">
        <h2>Tu Carrito</h2>
           <!-- üîπ Campo para ingresar referencia de compra -->
        <div class="reference-container">
          <label for="purchase-reference"><b>Referencia de Compra:</b></label>
          <input type="text" id="purchase-reference" placeholder="Ingresa una referencia" required>
        </div>
        
        <!-- Lista de productos en el carrito -->
        <ul class="cart-items">
          <!-- Aqu√≠ se cargar√°n los productos din√°micamente desde carrito.js -->
        </ul>
      
        <!-- Resumen del carrito -->
        <div class="cart-summary">
          <p>Total de productos: <span class="total-items">0</span></p>
          <p>Total: <span class="total-price">$0.00</span></p>
        </div>

        <!-- Selecci√≥n de direcci√≥n de env√≠o -->
        <div class="shipping-address">
          <h3>Direcci√≥n de Env√≠o</h3>
          <div id="selected-address">
            <p><b id="address-name"></b></p>
            <p id="address-details"></p>
            <button id="change-address">Cambiar</button>
          </div>
        </div>

        <!-- Modal para seleccionar direcci√≥n -->
        <div id="address-modal" class="modal" style="display: none;">
          <div class="modal-content">
            <span class="close" onclick="document.getElementById('address-modal').style.display='none'">&times;</span>
            <h2>Selecciona una Direcci√≥n</h2>
            <ul id="address-list"></ul>
          </div>
        </div>

              
        <!-- Botones de acci√≥n -->
        <div class="cart-actions">
          
        
          <div id="wallet_container"></div>
          
        
          <script src="https://sdk.mercadopago.com/js/v2"></script>
          <script>
            const mp = new MercadoPago("TEST-55cc3902-654d-43e4-a9fb-8f69981a6e60", {
              locale: "es-MX",
            });
        
            async function loadPaymentButton() {
              try {
                // ‚úÖ Obtener la `preferenceId` desde el backend
                const response = await fetch("/create_preference", {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                });
                const data = await response.json();
                const preferenceId = data.preferenceId;
        
                if (!preferenceId) {
                  throw new Error("No se recibi√≥ preferenceId");
                }
        
                // ‚úÖ Configurar el bot√≥n de pago con la `preferenceId`
                mp.bricks().create("wallet", "wallet_container", {
                  initialization: {
                    preferenceId: preferenceId,
                  },
                  
                  customization: {
                    texts: {
                      valueProp: "security_safety", // Otras opciones: 'default', 'none'
                      action: "pay", // Texto del bot√≥n de pago
                    },
                    
                    visual: {
                      buttonBackground: 'black',
                      style: {
                        theme: "dark", // Opciones: 'default', 'dark', 'custom'
                      },
                    },
                    
                  },
                });
              } catch (error) {
                console.error("Error al cargar el bot√≥n de pago:", error);
                document.getElementById("wallet_container").innerHTML =
                  "<p style='color: red;'>Error al cargar el bot√≥n de pago</p>";
              }
            }
        
            loadPaymentButton();
          </script>

          <button id="continue-shopping" class="continue-btn">Seguir Comprando</button>
          <script>
            // Seleccionamos el bot√≥n por su ID
            document.getElementById('continue-shopping').addEventListener('click', () => {
              // Redirige al usuario a la ruta /catalogo
              window.location.href = '/catalogo';
            });
          </script>
        </div>
        


      </div>
    </div>
    </div>


  <div id="footer" class="footer"></div>
  <div id="img" class="img"></div>
  <script src="./carrito.js"></script>

  <script>
    // barra y footer
    window.onload = function () {
      // Cargar barra y footer simult√°neamente
      Promise.all([
        fetch("/Templates/barra.html").then((response) => response.text()),
        fetch("/Templates/footer.html").then((response) => response.text()),
      ])
        .then(([barraHTML, footerHTML]) => {
          // Insertar HTML de barra y footer en sus respectivos contenedores
          document.getElementById("barra").innerHTML = barraHTML;
          document.getElementById("footer").innerHTML = footerHTML;
    
          // Inicializar l√≥gica adicional una vez que todo est√© cargado
          inicializarBarra();
        })
        .catch((error) => console.error("Error al cargar los templates:", error));
    };
    
    // Funci√≥n para inicializar la barra y agregar funcionalidades adicionales
    function inicializarBarra() {
      let claseAResaltar = "vacio";
    
      // Aplicar el estilo para el elemento resaltado
      let elementoAResaltar = document.querySelector(`.${claseAResaltar}`);
      if (elementoAResaltar) {
        elementoAResaltar.style.fontWeight = "bold";
        elementoAResaltar.style.color = "var(--color-lightseagreen)";
      }
    
      const loginWrapper = document.querySelector("#login-wrapper3");
      const loginText = document.querySelector(".login5");
      const cartContainer = document.getElementById("cart-container");
    
      // Configuraci√≥n predeterminada para el bot√≥n de login
      if (loginWrapper) {
        loginWrapper.onclick = function () {
          window.location.href = "/login";
        };
      }
    
      // Verificar la sesi√≥n para modificar el bot√≥n de login/logout
      fetch("/api/session")
        .then((response) => response.json())
        .then((data) => {
          console.log("Sesi√≥n obtenida:", data);
    
          if (data.isAuthenticated) {
            // Cambiar color y acci√≥n del bot√≥n de login para usuarios autenticados
            loginWrapper.setAttribute(
              "style",
              "background-color: #C19A6B; top: -10;"
            );
            loginText.textContent = "Mi Perfil";
            loginWrapper.onclick = function () {
              window.location.href = "/perfil";
            };
    
            // Mostrar el contenedor del carrito si est√° autenticado
            if (cartContainer) {
              cartContainer.style.display = "flex"; // O 'block', seg√∫n el dise√±o
            } else {
              console.warn("cart-container no encontrado en el DOM");
            }
    
            console.log("Sesi√≥n iniciada. Usuario:", data.correo);
          } else {
            console.log("No hay sesi√≥n iniciada.");
    
            // Ocultar el contenedor del carrito si no est√° autenticado
            if (cartContainer) {
              cartContainer.style.display = "none";
            }
          }
        })
        .catch((error) => console.error("Error al cargar la sesi√≥n:", error));
    }
    
  </script>
</body>
</html>
