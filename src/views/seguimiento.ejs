<% 
const descripciones = {
    0: 'Tu pedido ha sido registrado, pero aún no ha sido confirmado. Una vez revisado, se asignará una fecha de entrega. Te notificaremos cuando avance en el proceso.',
    1: 'El pedido ha sido confirmado y está en proceso de preparación.',
    2: 'Todos los insumos están listos para comenzar la fabricación.',
    3: 'El producto está en proceso de maquila, se está llevando a cabo la producción.',
    4: 'El producto está siendo barnizado para asegurar su acabado y durabilidad.',
    5: 'El producto está siendo armado por nuestros técnicos.',
    6: 'El producto ha sido empaquetado y enviado a la dirección indicada. Se espera que llegue en los próximos días.',
    7: 'El producto ha sido entregado al cliente.'
};

const estadoActual = estado; // Aquí 'estado' es el valor obtenido de la base de datos que indica la estado actual del pedido
%>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1, width=device-width" />

    <link rel="stylesheet" href="/global.css" />
    <link rel="stylesheet" href="/seguimiento.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;600;700&display=swap" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,300;0,400;0,500;0,700;1,600&display=swap" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Literata:wght@400&display=swap" />
    <!-- Barra y Footer (van antes de tu propio JS) -->
    <link rel="stylesheet" href="/barra.css" />
    <link rel="stylesheet" href="/footer.css" />
    <script src="/barra.js" defer></script> <!-- toggleMenu, hideSidebar -->
    <script src="/global.js" defer></script>
</head>

<body>
    <div id="barra"></div>
    <div class="seguimiento3">
      
        <div class="seguimiento-bloque">
            <div class="direccion-parent">
                <div class="direccion" data-animate-on-scroll>
                    <b class="direccin-de-envio">Dirección de Envío</b>
                    
                    <% if (direccion.recogerEnTienda) { %>
                        <div class="nombre-juan-quintana-calle-container">
                             <p class="nombre-juan-quintana"><b><%= direccion.mensaje %></b></p>
                        </div>
                    <% } else { %>
                        <div class="nombre-juan-quintana-calle-container">
                            <p class="nombre-juan-quintana">Calle: <%= direccion.calle %></p>
                            <p class="nombre-juan-quintana">Colonia: <%= direccion.colonia %></p>
                            <p class="nombre-juan-quintana">Ciudad: <%= direccion.ciudad %></p>
                            <p class="nombre-juan-quintana">Estado: <%= direccion.estado %></p>
                            <p class="nombre-juan-quintana">Código Postal: <%= direccion.codigoPostal %></p>
                        </div>
                    <% } %>
                
                    <img class="package-2-icon" alt="" src="/public/package-2.svg" />
                </div>
                
                <div class="fecha" data-animate-on-scroll>
                    <b class="tiempo-estimado">Fecha Estimada</b>
                    <img class="calendar" alt="" src="public/calendar.svg" />
                    <b class="fechaEstimada"><%= fechaEstimada %></b>
                </div>
                <div class="detalleetapaactual animate">
                    <div class="c77ba59f830c693638c79c15db96bf-icon"></div>
                    <b class="detalles-de-la">Detalles de la Etapa Actual</b>
                    <div class="el-mueble-ha">
                        <%= descripciones[estado] %>
                    </div>
                </div>
            </div>
           
            <div class="seguimiento4">
              <div class="estado-pedido-titulo">Estado del Pedido</div>
              <div class="linea-Segment"></div>
              <div class="etapas-container">
                  <% for (let i = 1; i <= 7; i++) { %>
                    <div class="estado">
                      <img class="circulo" src="/public/<%= i < estado ? 'ellipse-22.svg' : i === estado ? 'ellipse-28.svg' : 'ellipse-29.svg' %>" />
                      <img src="/public/<%= i === 1 ? 'bill.svg' : i === 2 ? 'sumply.svg' : i === 3 ? 'saw.svg' : i === 4 ? 'brush.svg' : i === 5 ? 'hammer.svg' : i === 6 ? 'truck.svg' : 'entregado.svg' %>" alt="" />
                    </div>
                  <% } %>
                </div>
                <div class="linea-Proceso" style="width: calc(<%= ((estado - 1) / 7 * 90) - 10 %>%)"> </div>
                    <div class="linea-base"></div>
                    <div class="linea-naranja" style="width: calc(<%= (estado - 1) / 7 * 90 %>%)"> </div>
              <div class="textos-container">
                
                  <div class="textos-container">
                    <div class="texto">Pedido<br>Confirmado</div>
                    <div class="texto">Insumos<br>Listos</div>
                    <div class="texto">Maquila<br>en Proceso</div>
                    <div class="texto">Barniz</div>
                    <div class="texto">Armado</div>
                    <div class="texto">En Camino</div>
                    <div class="texto">Entrega</div>
                  </div>
                
              </div>
            </div>
            <div class="informacion">
                <div class="divisor"></div>
                <div class="imagespace"></div>
                <img id="mainImage" class="main-image-icon" alt="" 
                    src="<%= producto.path_imagen %>" 
                    data-animate-on-scroll />


                    <div class="description">
                        <b class="informacin-del-pedido">Información del pedido</b>
                        <div class="mueble-credenza-material-mad-container">
                            <p class="nombre-juan-quintana">Mueble: <%= producto.nombre || "No disponible" %></p>
                            <p class="nombre-juan-quintana">Material: <%= info.material || "No disponible" %></p>
                            <p class="nombre-juan-quintana">Dimensiones: <%= info.dimensiones || "No disponible" %></p>
                            <p class="nombre-juan-quintana">Acabado: <%= info.acabado || "No disponible" %></p>
                            <p class="nombre-juan-quintana">Color: <%= info.color || "No disponible" %></p>
                            <p class="nombre-juan-quintana">Cantidad: <%= cantidad || "1" %></p> <!-- ✅ Agregamos la cantidad -->
                        </div>
                    </div>
                    
                <div class="credenza"><%= producto.nombre || "No disponible" %></div>
                <div class="id-de-envo">ID de Envío:</div>
                <div class="div18"><%= idCompra %></div>
                <div class="repeat-grid-3">
                    <div class="div19">
                        <div class="grid-fondo"></div>
                        <button class="credenza4" onclick="changeMainImage('<%= producto.path_imagen %>')">
                            <img src="<%= producto.path_imagen %>" alt="Imagen Principal">
                        </button>
                        
                        
                    </div>
                    <div class="div20">
                        <div class="grid-fondo"></div>
                        <button class="credenza4" onclick="changeMainImage('<%= producto.path_imagen %>')">
                            <img src="<%= producto.path_imagen %>" alt="Imagen Principal">
                        </button>
                        
                        
                    </div>
                    <div class="div21">
                        <div class="grid-fondo"></div>
                        <button class="credenza4" onclick="changeMainImage('<%= producto.path_imagen %>')">
                            <img src="<%= producto.path_imagen %>" alt="Imagen Principal">
                        </button>
                        
                        
                    </div>
                    <div class="div22">
                        <div class="grid-fondo"></div>
                        <button class="credenza4" onclick="changeMainImage('<%= producto.path_imagen %>')">
                            <img src="<%= producto.path_imagen %>" alt="Imagen Principal">
                        </button>
                        
                    </div>
                </div>
            </div>
             <!-- En tu EJS/HTML -->
            <div class="carrusel-wrapper" id="carruselWrapper">
                <div class="progreso-titulo">Progreso</div>
                <div class="linea-Segment2"></div>

                <div class="carousel-container">
                
                <div class="carousel-track-container">
                    <div id="carouselTrack" class="carousel-track">
                    <!-- Imágenes dinámicas -->
                    </div>
                </div>
                
                </div>
                <button id="prevBtn" class="carousel-control prev">&#8249;</button>
                <button id="nextBtn" class="carousel-control next">&#8250;</button>
            
                <!-- Indicadores (puntitos) -->
                <div id="carouselIndicators" class="carousel-indicators"></div>
            </div>
            
            
            </div>
        
        
            
    </div>

    <!-- Footer -->
    <div id="footer"></div>

    <script>

        window.onload = () => loadTemplates('seguimiento');

      
        function changeMainImage(imagePath) {
            document.getElementById('mainImage').src = imagePath;
        }


        var scrollAnimElements = document.querySelectorAll("[data-animate-on-scroll]");
        var observer = new IntersectionObserver(
            (entries) => {
                for (const entry of entries) {
                    if (entry.isIntersecting || entry.intersectionRatio > 0) {
                        const targetElement = entry.target;
                        targetElement.classList.add("animate");
                        observer.unobserve(targetElement);
                    }
                }
            },
            {
                threshold: 0.15,
            }
        );

        for (let i = 0; i < scrollAnimElements.length; i++) {
            observer.observe(scrollAnimElements[i]);
        }
    </script>
    <script>
        // Después de tu window.onload o dentro de él, para asegurarte de que el DOM está cargado:
        window.addEventListener("DOMContentLoaded", function() {
          const compraId = "<%= idCompra %>"; 
          const CFI = "<%= CFI %>"; // Asegúrate de inyectar tu variable CFI si usas EJS
          const track = document.getElementById("carouselTrack");
          const prevBtn = document.getElementById("prevBtn");
          const nextBtn = document.getElementById("nextBtn");
          const indicatorsContainer = document.getElementById("carouselIndicators");
      
          let currentSlide = 0; // Índice del slide actual
          let totalSlides = 0;
      
          // 1) Cargar imágenes desde el backend
          fetch(`/seguimiento/${compraId}/images`)
            .then(res => res.json())
            .then(data => {
              if (!data.success) {
                console.error(data.error);
                return;
              }
              const images = data.images || [];
              const wrapper = document.getElementById("carruselWrapper");


                if (images.length === 0) {
                // No hay imágenes, ocultar el carrusel
                wrapper.style.display = "none";
                return; // Detener aquí, para no crear slides ni indicadores
                }
                const bloque = document.querySelector('.seguimiento-bloque');

                

                if (images.length > 0) {
                // Aplica la clase si sí hay imágenes
                bloque.classList.add('has-images');
                } else {
                // Si no hay imágenes, quita la clase o no la agregas
                bloque.classList.remove('has-images');
                }
      
              // OPCIONAL: si quieres la imagen más reciente primero,
              // harías images.reverse(). Pero dices "la 1 primero y la última al final",
              // así que no hace falta reverse.
      
              totalSlides = images.length;
      
              // 2) Crear cada slide
              images.forEach((key, index) => {
                // Contenedor "slide"
                const slideDiv = document.createElement("div");
                slideDiv.classList.add("slide");
      
                // Imagen
                const img = document.createElement("img");
                img.src = `${CFI}/${key}`; // Construye la URL final
                img.alt = `Progreso ${index + 1}`;
      
                slideDiv.appendChild(img);
                track.appendChild(slideDiv);
      
                // 3) Crear indicador (puntito)
                const dot = document.createElement("div");
                dot.classList.add("indicator-dot");
                dot.addEventListener("click", () => goToSlide(index));
                indicatorsContainer.appendChild(dot);
              });
      
              // Activar el primer indicador
              updateIndicators();
      
              // Ajustar track a la posición inicial
              goToSlide(0);
            })
            .catch(err => console.error("Error al cargar imágenes de progreso:", err));
      
          // Función para moverse a un slide específico
          function goToSlide(slideIndex) {
            if (slideIndex < 0) slideIndex = totalSlides - 1;
            if (slideIndex >= totalSlides) slideIndex = 0;
            currentSlide = slideIndex;
      
            const slideWidth = track.clientWidth; 
            // Mover la pista (carousel-track) con transform
            track.style.transform = `translateX(-${slideWidth * currentSlide}px)`;
      
            updateIndicators();
          }
      
          // Actualizar estilo de los puntitos
          function updateIndicators() {
            const dots = indicatorsContainer.querySelectorAll(".indicator-dot");
            dots.forEach((dot, i) => {
              dot.classList.toggle("active", i === currentSlide);
            });
          }
      
          // Eventos de flechas
          prevBtn.addEventListener("click", () => {
            goToSlide(currentSlide - 1);
          });
          nextBtn.addEventListener("click", () => {
            goToSlide(currentSlide + 1);
          });
      
          // (Opcional) Ajustar automáticamente el tamaño del carrusel al redimensionar
          window.addEventListener("resize", () => {
            // Forzamos el "re-layout" cuando cambie el ancho, para que se recalcule
            goToSlide(currentSlide);
          });
        });
      </script>
      
</body>
</html>
